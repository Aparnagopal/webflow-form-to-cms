/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Webflow from "../../../../../index";
export declare namespace AuditLogs {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | environments.WebflowEnvironmentUrls>;
        accessToken: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class AuditLogs {
    protected readonly _options: AuditLogs.Options;
    constructor(_options: AuditLogs.Options);
    /**
     * Get audit logs for a workspace.
     *
     * <Warning title="Enterprise & workspace API token only">This endpoint requires an Enterprise workspace and a workspace token with the `workspace_activity:read` scope. Create a workspace token from your workspace dashboard integrations page to use this endpoint.</Warning>
     *
     * Required scope | `workspace_activity:read`
     *
     * @param {string} workspaceIdOrSlug - Unique identifier or slug for a Workspace
     * @param {Webflow.workspaces.AuditLogsGetWorkspaceAuditLogsRequest} request
     * @param {AuditLogs.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.workspaces.auditLogs.getWorkspaceAuditLogs("hitchhikers-workspace", {
     *         from: "2024-04-22T16:00:31Z",
     *         to: "2024-04-22T16:00:31Z"
     *     })
     */
    getWorkspaceAuditLogs(workspaceIdOrSlug: string, request?: Webflow.workspaces.AuditLogsGetWorkspaceAuditLogsRequest, requestOptions?: AuditLogs.RequestOptions): Promise<Webflow.WorkspaceAuditLogResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
